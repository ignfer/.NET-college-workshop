@using System.Timers
@using MySolution.Services
@inject AppointmentService AppointmentService
@implements IDisposable
@rendermode InteractiveServer

@code {
	private Timer? timer;
	private int lastHour = 0;
	private int lastWeek = 0;
	private int lastMonth = 0;

	protected override void OnInitialized() {
		timer = new Timer(200);
		timer.Elapsed += UpdateQueue;
		timer.AutoReset = true;
		timer.Enabled = true;
	}

	private void UpdateQueue(object? sender, ElapsedEventArgs e)
	{
		try
		{
			InvokeAsync(() =>
			{

				var stats = AppointmentService.GetAppointmentStats();
				lastHour= stats.LastHour;
				lastWeek= stats.LastWeek;
				lastMonth= stats.LastMonth;

				StateHasChanged();
			});
		}
		catch (Exception ex)
		{
			Console.WriteLine($"Error in ChartOfficeCount: {ex.Message}");
		}
	}

	public void Dispose()
	{
		if (timer != null)
		{
			timer.Stop();
			timer.Dispose();
		}
	}
}

<div class="
			p-2 
			gap-2
			border 
			border-1 
			border-primary 
			w-100 
			rounded-2 
			shadow-sm
			d-flex 
			flex-row
			justify-content-center 
			align-items-center"
>
		<StatCard Subtitle="Ultima Hora" Title="@lastHour.ToString()"/>
		<StatCard Subtitle="Ultima Semana" Title="@lastWeek.ToString()"/>
		<StatCard Subtitle="Ultimo Mes" Title="@lastMonth.ToString()"/>
</div>
